<<<<<<< .mine
ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FSP.Web.TowTruckServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TowTruckData", Namespace="http://schemas.datacontract.org/2004/07/FPSService")]
    [System.SerializableAttribute()]
    public partial class TowTruckData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutOfBoundsAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutOfBoundsMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OutOfBoundsTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpeedingAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SpeedingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TruckNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((this.AlarmsField.Equals(value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeatNumber {
            get {
                return this.BeatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BeatNumberField, value) != true)) {
                    this.BeatNumberField = value;
                    this.RaisePropertyChanged("BeatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractorName {
            get {
                return this.ContractorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractorNameField, value) != true)) {
                    this.ContractorNameField = value;
                    this.RaisePropertyChanged("ContractorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverName {
            get {
                return this.DriverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverNameField, value) != true)) {
                    this.DriverNameField = value;
                    this.RaisePropertyChanged("DriverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastMessage {
            get {
                return this.LastMessageField;
            }
            set {
                if ((this.LastMessageField.Equals(value) != true)) {
                    this.LastMessageField = value;
                    this.RaisePropertyChanged("LastMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutOfBoundsAlarm {
            get {
                return this.OutOfBoundsAlarmField;
            }
            set {
                if ((this.OutOfBoundsAlarmField.Equals(value) != true)) {
                    this.OutOfBoundsAlarmField = value;
                    this.RaisePropertyChanged("OutOfBoundsAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutOfBoundsMessage {
            get {
                return this.OutOfBoundsMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OutOfBoundsMessageField, value) != true)) {
                    this.OutOfBoundsMessageField = value;
                    this.RaisePropertyChanged("OutOfBoundsMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OutOfBoundsTime {
            get {
                return this.OutOfBoundsTimeField;
            }
            set {
                if ((this.OutOfBoundsTimeField.Equals(value) != true)) {
                    this.OutOfBoundsTimeField = value;
                    this.RaisePropertyChanged("OutOfBoundsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpeedingAlarm {
            get {
                return this.SpeedingAlarmField;
            }
            set {
                if ((this.SpeedingAlarmField.Equals(value) != true)) {
                    this.SpeedingAlarmField = value;
                    this.RaisePropertyChanged("SpeedingAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SpeedingTime {
            get {
                return this.SpeedingTimeField;
            }
            set {
                if ((this.SpeedingTimeField.Equals(value) != true)) {
                    this.SpeedingTimeField = value;
                    this.RaisePropertyChanged("SpeedingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpeedingValue {
            get {
                return this.SpeedingValueField;
            }
            set {
                if ((this.SpeedingValueField.Equals(value) != true)) {
                    this.SpeedingValueField = value;
                    this.RaisePropertyChanged("SpeedingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TruckNumber {
            get {
                return this.TruckNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TruckNumberField, value) != true)) {
                    this.TruckNumberField = value;
                    this.RaisePropertyChanged("TruckNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleState {
            get {
                return this.VehicleStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleStateField, value) != true)) {
                    this.VehicleStateField = value;
                    this.RaisePropertyChanged("VehicleState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssistReq", Namespace="http://schemas.datacontract.org/2004/07/FPSService")]
    [System.SerializableAttribute()]
    public partial class AssistReq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AssistIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ContractorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerWaitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DispatchTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DriverIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DropZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FleetVehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IncidentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IncidentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensePlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TowLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TrafficSpeedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VehiclePositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VehicleTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime x1097Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime x1098Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AssistID {
            get {
                return this.AssistIDField;
            }
            set {
                if ((this.AssistIDField.Equals(value) != true)) {
                    this.AssistIDField = value;
                    this.RaisePropertyChanged("AssistID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ContractorID {
            get {
                return this.ContractorIDField;
            }
            set {
                if ((this.ContractorIDField.Equals(value) != true)) {
                    this.ContractorIDField = value;
                    this.RaisePropertyChanged("ContractorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLastName {
            get {
                return this.CustomerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLastNameField, value) != true)) {
                    this.CustomerLastNameField = value;
                    this.RaisePropertyChanged("CustomerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerWaitTime {
            get {
                return this.CustomerWaitTimeField;
            }
            set {
                if ((this.CustomerWaitTimeField.Equals(value) != true)) {
                    this.CustomerWaitTimeField = value;
                    this.RaisePropertyChanged("CustomerWaitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DispatchTime {
            get {
                return this.DispatchTimeField;
            }
            set {
                if ((this.DispatchTimeField.Equals(value) != true)) {
                    this.DispatchTimeField = value;
                    this.RaisePropertyChanged("DispatchTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DriverID {
            get {
                return this.DriverIDField;
            }
            set {
                if ((this.DriverIDField.Equals(value) != true)) {
                    this.DriverIDField = value;
                    this.RaisePropertyChanged("DriverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DropZone {
            get {
                return this.DropZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DropZoneField, value) != true)) {
                    this.DropZoneField = value;
                    this.RaisePropertyChanged("DropZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndOD {
            get {
                return this.EndODField;
            }
            set {
                if ((this.EndODField.Equals(value) != true)) {
                    this.EndODField = value;
                    this.RaisePropertyChanged("EndOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FleetVehicleID {
            get {
                return this.FleetVehicleIDField;
            }
            set {
                if ((this.FleetVehicleIDField.Equals(value) != true)) {
                    this.FleetVehicleIDField = value;
                    this.RaisePropertyChanged("FleetVehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncidentID {
            get {
                return this.IncidentIDField;
            }
            set {
                if ((this.IncidentIDField.Equals(value) != true)) {
                    this.IncidentIDField = value;
                    this.RaisePropertyChanged("IncidentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncidentTypeID {
            get {
                return this.IncidentTypeIDField;
            }
            set {
                if ((this.IncidentTypeIDField.Equals(value) != true)) {
                    this.IncidentTypeIDField = value;
                    this.RaisePropertyChanged("IncidentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMDC {
            get {
                return this.IsMDCField;
            }
            set {
                if ((this.IsMDCField.Equals(value) != true)) {
                    this.IsMDCField = value;
                    this.RaisePropertyChanged("IsMDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicensePlate {
            get {
                return this.LicensePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensePlateField, value) != true)) {
                    this.LicensePlateField = value;
                    this.RaisePropertyChanged("LicensePlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogNumber {
            get {
                return this.LogNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LogNumberField, value) != true)) {
                    this.LogNumberField = value;
                    this.RaisePropertyChanged("LogNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceTypeID {
            get {
                return this.ServiceTypeIDField;
            }
            set {
                if ((this.ServiceTypeIDField.Equals(value) != true)) {
                    this.ServiceTypeIDField = value;
                    this.RaisePropertyChanged("ServiceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartOD {
            get {
                return this.StartODField;
            }
            set {
                if ((this.StartODField.Equals(value) != true)) {
                    this.StartODField = value;
                    this.RaisePropertyChanged("StartOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tip {
            get {
                return this.TipField;
            }
            set {
                if ((this.TipField.Equals(value) != true)) {
                    this.TipField = value;
                    this.RaisePropertyChanged("Tip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipDetail {
            get {
                return this.TipDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.TipDetailField, value) != true)) {
                    this.TipDetailField = value;
                    this.RaisePropertyChanged("TipDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TowLocationID {
            get {
                return this.TowLocationIDField;
            }
            set {
                if ((this.TowLocationIDField.Equals(value) != true)) {
                    this.TowLocationIDField = value;
                    this.RaisePropertyChanged("TowLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TrafficSpeedID {
            get {
                return this.TrafficSpeedIDField;
            }
            set {
                if ((this.TrafficSpeedIDField.Equals(value) != true)) {
                    this.TrafficSpeedIDField = value;
                    this.RaisePropertyChanged("TrafficSpeedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VehiclePositionID {
            get {
                return this.VehiclePositionIDField;
            }
            set {
                if ((this.VehiclePositionIDField.Equals(value) != true)) {
                    this.VehiclePositionIDField = value;
                    this.RaisePropertyChanged("VehiclePositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VehicleTypeID {
            get {
                return this.VehicleTypeIDField;
            }
            set {
                if ((this.VehicleTypeIDField.Equals(value) != true)) {
                    this.VehicleTypeIDField = value;
                    this.RaisePropertyChanged("VehicleTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime x1097 {
            get {
                return this.x1097Field;
            }
            set {
                if ((this.x1097Field.Equals(value) != true)) {
                    this.x1097Field = value;
                    this.RaisePropertyChanged("x1097");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime x1098 {
            get {
                return this.x1098Field;
            }
            set {
                if ((this.x1098Field.Equals(value) != true)) {
                    this.x1098Field = value;
                    this.RaisePropertyChanged("x1098");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncidentIn", Namespace="http://schemas.datacontract.org/2004/07/FPSService")]
    [System.SerializableAttribute()]
    public partial class IncidentIn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BeatSegmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FreewayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IncidentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BeatSegmentID {
            get {
                return this.BeatSegmentIDField;
            }
            set {
                if ((this.BeatSegmentIDField.Equals(value) != true)) {
                    this.BeatSegmentIDField = value;
                    this.RaisePropertyChanged("BeatSegmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FreewayID {
            get {
                return this.FreewayIDField;
            }
            set {
                if ((this.FreewayIDField.Equals(value) != true)) {
                    this.FreewayIDField = value;
                    this.RaisePropertyChanged("FreewayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncidentID {
            get {
                return this.IncidentIDField;
            }
            set {
                if ((this.IncidentIDField.Equals(value) != true)) {
                    this.IncidentIDField = value;
                    this.RaisePropertyChanged("IncidentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentNumber {
            get {
                return this.IncidentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentNumberField, value) != true)) {
                    this.IncidentNumberField = value;
                    this.RaisePropertyChanged("IncidentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TowTruckServiceRef.ITowTruckService")]
    public interface ITowTruckService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/CurrentTrucks", ReplyAction="http://tempuri.org/ITowTruckService/CurrentTrucksResponse")]
        FSP.Web.TowTruckServiceRef.TowTruckData[] CurrentTrucks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/AddTruckAssistRequest", ReplyAction="http://tempuri.org/ITowTruckService/AddTruckAssistRequestResponse")]
        void AddTruckAssistRequest(string IPAddress, FSP.Web.TowTruckServiceRef.AssistReq thisReq, System.Guid IncidentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/ClearTruckAssistRequest", ReplyAction="http://tempuri.org/ITowTruckService/ClearTruckAssistRequestResponse")]
        void ClearTruckAssistRequest(string IPAddress, System.Guid AssistRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/GetPreloadedData", ReplyAction="http://tempuri.org/ITowTruckService/GetPreloadedDataResponse")]
        string[] GetPreloadedData(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/AddIncident", ReplyAction="http://tempuri.org/ITowTruckService/AddIncidentResponse")]
        void AddIncident(FSP.Web.TowTruckServiceRef.IncidentIn thisIncidentIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/GetIncidents", ReplyAction="http://tempuri.org/ITowTruckService/GetIncidentsResponse")]
        FSP.Web.TowTruckServiceRef.IncidentIn[] GetIncidents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/FindIncidentByID", ReplyAction="http://tempuri.org/ITowTruckService/FindIncidentByIDResponse")]
        FSP.Web.TowTruckServiceRef.IncidentIn FindIncidentByID(System.Guid IncidentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/ClearIncident", ReplyAction="http://tempuri.org/ITowTruckService/ClearIncidentResponse")]
        void ClearIncident(System.Guid IncidentID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITowTruckServiceChannel : FSP.Web.TowTruckServiceRef.ITowTruckService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TowTruckServiceClient : System.ServiceModel.ClientBase<FSP.Web.TowTruckServiceRef.ITowTruckService>, FSP.Web.TowTruckServiceRef.ITowTruckService {
        
        public TowTruckServiceClient() {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TowTruckServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FSP.Web.TowTruckServiceRef.TowTruckData[] CurrentTrucks() {
            return base.Channel.CurrentTrucks();
        }
        
        public void AddTruckAssistRequest(string IPAddress, FSP.Web.TowTruckServiceRef.AssistReq thisReq, System.Guid IncidentID) {
            base.Channel.AddTruckAssistRequest(IPAddress, thisReq, IncidentID);
        }
        
        public void ClearTruckAssistRequest(string IPAddress, System.Guid AssistRequestID) {
            base.Channel.ClearTruckAssistRequest(IPAddress, AssistRequestID);
        }
        
        public string[] GetPreloadedData(string Type) {
            return base.Channel.GetPreloadedData(Type);
        }
        
        public void AddIncident(FSP.Web.TowTruckServiceRef.IncidentIn thisIncidentIn) {
            base.Channel.AddIncident(thisIncidentIn);
        }
        
        public FSP.Web.TowTruckServiceRef.IncidentIn[] GetIncidents() {
            return base.Channel.GetIncidents();
        }
        
        public FSP.Web.TowTruckServiceRef.IncidentIn FindIncidentByID(System.Guid IncidentID) {
            return base.Channel.FindIncidentByID(IncidentID);
        }
        
        public void ClearIncident(System.Guid IncidentID) {
            base.Channel.ClearIncident(IncidentID);
        }
    }
}
=======
ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FSP.Web.TowTruckServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TowTruckData", Namespace="http://schemas.datacontract.org/2004/07/FPSService")]
    [System.SerializableAttribute()]
    public partial class TowTruckData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeatDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutOfBoundsAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutOfBoundsMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OutOfBoundsTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpeedingAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SpeedingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedingValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TruckIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((this.AlarmsField.Equals(value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeatDescription {
            get {
                return this.BeatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BeatDescriptionField, value) != true)) {
                    this.BeatDescriptionField = value;
                    this.RaisePropertyChanged("BeatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutOfBoundsAlarm {
            get {
                return this.OutOfBoundsAlarmField;
            }
            set {
                if ((this.OutOfBoundsAlarmField.Equals(value) != true)) {
                    this.OutOfBoundsAlarmField = value;
                    this.RaisePropertyChanged("OutOfBoundsAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutOfBoundsMessage {
            get {
                return this.OutOfBoundsMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OutOfBoundsMessageField, value) != true)) {
                    this.OutOfBoundsMessageField = value;
                    this.RaisePropertyChanged("OutOfBoundsMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OutOfBoundsTime {
            get {
                return this.OutOfBoundsTimeField;
            }
            set {
                if ((this.OutOfBoundsTimeField.Equals(value) != true)) {
                    this.OutOfBoundsTimeField = value;
                    this.RaisePropertyChanged("OutOfBoundsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpeedingAlarm {
            get {
                return this.SpeedingAlarmField;
            }
            set {
                if ((this.SpeedingAlarmField.Equals(value) != true)) {
                    this.SpeedingAlarmField = value;
                    this.RaisePropertyChanged("SpeedingAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SpeedingTime {
            get {
                return this.SpeedingTimeField;
            }
            set {
                if ((this.SpeedingTimeField.Equals(value) != true)) {
                    this.SpeedingTimeField = value;
                    this.RaisePropertyChanged("SpeedingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpeedingValue {
            get {
                return this.SpeedingValueField;
            }
            set {
                if ((this.SpeedingValueField.Equals(value) != true)) {
                    this.SpeedingValueField = value;
                    this.RaisePropertyChanged("SpeedingValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TruckID {
            get {
                return this.TruckIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TruckIDField, value) != true)) {
                    this.TruckIDField = value;
                    this.RaisePropertyChanged("TruckID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleState {
            get {
                return this.VehicleStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleStateField, value) != true)) {
                    this.VehicleStateField = value;
                    this.RaisePropertyChanged("VehicleState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TowTruckServiceRef.ITowTruckService")]
    public interface ITowTruckService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/DoWork", ReplyAction="http://tempuri.org/ITowTruckService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITowTruckService/CurrentTrucks", ReplyAction="http://tempuri.org/ITowTruckService/CurrentTrucksResponse")]
        FSP.Web.TowTruckServiceRef.TowTruckData[] CurrentTrucks();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITowTruckServiceChannel : FSP.Web.TowTruckServiceRef.ITowTruckService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TowTruckServiceClient : System.ServiceModel.ClientBase<FSP.Web.TowTruckServiceRef.ITowTruckService>, FSP.Web.TowTruckServiceRef.ITowTruckService {
        
        public TowTruckServiceClient() {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TowTruckServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TowTruckServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public FSP.Web.TowTruckServiceRef.TowTruckData[] CurrentTrucks() {
            return base.Channel.CurrentTrucks();
        }
    }
}
>>>>>>> .r668
